version: 2.1

release_tag_only: &release_tag_only
  filters:
    tags:
      only: /^v[0-9]+\.[0-9]+\.[0-9]+/
    branches:
      ignore: /.*/

executors:
  docker-amd64:
    parameters:
      image:
        type: string
    docker:
      - image: << parameters.image >>
    resource_class: large

jobs:
  build:
    parameters:
      build-image:
        type: string
      base-image:
        type: string
        default: ""
      nginx-version:
        type: string
      arch:
        type: string
        default: "amd64"
    executor:
      name: docker-<< parameters.arch >>
      image: << parameters.build-image >>
    environment:
      MAKE_JOB_COUNT: 8
    steps:
    - checkout
    - run: printf 'NGINX_VERSION=%s\n' << parameters.nginx-version >> >>nginx-version-info
    - run: printf 'BASE_IMAGE=%s\n' '<< parameters.base-image >>' >>nginx-version-info
    - run: printf 'ARCH=%s\n' '<< parameters.arch >>' >>nginx-version-info
    - run: gzip -d lib/libdd_trace_cpp-static.a.gz
    - run: ls -al
        command: make build
        environment:
          BUILD_TYPE: Release
          NGINX_VERSION: << parameters.nginx-version >>
    - persist_to_workspace:
        root: .
        paths:
          - .build/ngx_http_datadog_module.so
          - nginx-version-info
    - store_artifacts:
        path: .build/ngx_http_datadog_module.so
        destination: ngx_http_datadog_module.so
    - store_artifacts:
        path: nginx-version-info
        destination: nginx-version-info

  test:
    parameters:
      base-image:
        type: string
        default: ""
      arch:
        type: string
        default: "amd64"
    executor:
      name: docker-<< parameters.arch >>
      image: cimg/python:3.10.13
    environment:
      DOCKER_BUILDKIT: 1
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace
    - run: mv /tmp/workspace/nginx-version-info .
    - run: printf 'ARCH=%s\n' '<< parameters.arch >>' >>nginx-version-info
    - run: mv /tmp/workspace/.build/ngx_http_datadog_module.so test/services/nginx/ngx_http_datadog_module.so
    - setup_remote_docker:
        docker_layer_caching: true
    - run: |
        env | sort
    - run: test/bin/run --verbose --failfast
    - store_artifacts:
        path: test/logs/test.log
        destination: test.log

  format:
    docker:
    - image: "datadog/docker-library:dd-trace-cpp-ci"
    resource_class: small
    steps:
    - checkout
    - run:
        name: Install Python dependencies
        command: |
          pip install yapf
          update-alternatives --install /usr/local/bin/yapf3 yapf3 /usr/local/bin/yapf 100
    - run: make lint

  shellcheck:
    docker:
    - image: koalaman/shellcheck-alpine:v0.9.0
      entrypoint: /bin/sh
    steps:
    - checkout
    - run: find bin/ test/ example/ -type f -executable | xargs shellcheck --exclude SC1071,SC1091,SC2317

workflows:
  build-and-test:
    jobs:
    - format
    - shellcheck:
        name: "run shellcheck on shell scripts"
        filters:
          tags:
            ignore: /^v[0-9]+\.[0-9]+\.[0-9]+/
    - build:
        name: "build on nginx:1.24.0"
        base-image: "nginx:1.24.0"
        build-image: "datadog/docker-library:nginx-datadog-build-nginx_1.24.0"
        nginx-version: "1.24.0"
        filters:
          tags:
            ignore: /^v[0-9]+\.[0-9]+\.[0-9]+/
    - test:
        name: "test on nginx:1.24.0"
        base-image: "nginx:1.24.0"
        requires:
        - "build on nginx:1.24.0"
        filters:
          tags:
            ignore: /^v[0-9]+\.[0-9]+\.[0-9]+/

  build-and-test-all:
    jobs:
    - build:
        <<: *release_tag_only
        name: "build on nginx:1.24.0"
        base-image: "nginx:1.24.0"
        build-image: "datadog/docker-library:nginx-datadog-build-nginx_1.24.0"
        nginx-version: "1.24.0"
    - test:
        <<: *release_tag_only
        requires:
        - "build on nginx:1.24.0"
        name: "test on nginx:1.24.0"
        base-image: "nginx:1.24.0"
