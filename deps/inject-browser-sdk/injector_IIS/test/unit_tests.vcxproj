<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{09f3c080-322e-46e1-afe6-2f970945ed05}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <ProjectName>unit_tests</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)test\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)test\$(Platform)\$(Configuration)\</IntDir>
    <TestDir>$(SolutionDir)test\</TestDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)test\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)test\$(Platform)\$(Configuration)\</IntDir>
    <TestDir>$(SolutionDir)test\</TestDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
  <ItemGroup>
    <ClCompile Include="..\packages\gmock.1.11.0\lib\native\src\gtest\src\gtest_main.cc" />
    <ClCompile Include="..\src\ruminjector.cpp" />
    <ClCompile Include="test.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="test-response-expected-result.html" />
    <None Include="test-response.html">
      <DeploymentContent>true</DeploymentContent>
    </None>
    <None Include="packages.config" />
    <None Include="test_config_dir\site_with_valid_config\rum-config.json" />
    <None Include="test_config_dir_bad_json\site_with_bad_json\rum-config.json" />
    <None Include="test_config_dir_invalid_config\site_with_invalid_config\rum-config.json" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="testhelpers.h" />
    <ClInclude Include="mocks.h" />
  </ItemGroup>
  <ItemDefinitionGroup />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\packages\gmock.1.11.0\build\native\gmock.targets" Condition="Exists('..\packages\gmock.1.11.0\build\native\gmock.targets')" />
  </ImportGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions);TESTING;TEST_DIR=R"($(TestDir))"</PreprocessorDefinitions>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <WarningLevel>Level3</WarningLevel>
      <AdditionalIncludeDirectories>$(SolutionDir)lib;$(SolutionDir)src;$(SolutionDir)packages\gmock.1.11.0\lib\native\include</AdditionalIncludeDirectories>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <AdditionalLibraryDirectories>
      </AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)lib/$(Configuration)/injectbrowsersdk.lib;%(AdditionalDependencies);ws2_32.lib;userenv.lib;ntdll.lib;bcrypt.lib</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>echo "Building injectbrowsersdk.lib"
cargo build --manifest-path=..\..\lib\Cargo.toml
if %errorlevel% neq 0 exit /b %errorlevel%

echo "Copying injectbrowsersdk.lib to lib\$(Configuration)"
mkdir $(SolutionDir)lib\$(Configuration)
copy /y "..\..\lib\target\debug\injectbrowsersdk.lib" $(SolutionDir)lib\$(Configuration)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <WarningLevel>Level3</WarningLevel>
      <AdditionalIncludeDirectories>$(SolutionDir)lib;$(SolutionDir)src;$(SolutionDir)packages\gmock.1.11.0\lib\native\include</AdditionalIncludeDirectories>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <PreprocessorDefinitions>X64;_DEBUG;_CONSOLE;%(PreprocessorDefinitions);TESTING;TEST_DIR=R"($(TestDir))"</PreprocessorDefinitions>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <AdditionalLibraryDirectories>
      </AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)lib/$(Configuration)/injectbrowsersdk.lib;%(AdditionalDependencies);ws2_32.lib;userenv.lib;ntdll.lib;bcrypt.lib</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>echo "Building injectbrowsersdk.lib"
cargo build --manifest-path=..\..\lib\Cargo.toml
if %errorlevel% neq 0 exit /b %errorlevel%

echo "Copying injectbrowsersdk.lib to lib\$(Configuration)"
mkdir $(SolutionDir)lib\$(Configuration)
copy /y "..\..\lib\target\debug\injectbrowsersdk.lib" $(SolutionDir)lib\$(Configuration)</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions);TESTING;TEST_DIR=R"($(TestDir))"</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>$(SolutionDir)lib;$(SolutionDir)src;$(SolutionDir)packages\gmock.1.11.0\lib\native\include</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <AdditionalDependencies>$(SolutionDir)lib/$(Configuration)/injectbrowsersdk.lib;%(AdditionalDependencies);ws2_32.lib;userenv.lib;ntdll.lib;bcrypt.lib</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PreprocessorDefinitions>X64;NDEBUG;_CONSOLE;%(PreprocessorDefinitions);TESTING;TEST_DIR=R"($(TestDir))"</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>$(SolutionDir)lib;$(SolutionDir)src;$(SolutionDir)packages\gmock.1.11.0\lib\native\include</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <AdditionalDependencies>$(SolutionDir)lib/$(Configuration)/injectbrowsersdk.lib;%(AdditionalDependencies);ws2_32.lib;userenv.lib;ntdll.lib;bcrypt.lib</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\gmock.1.11.0\build\native\gmock.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\gmock.1.11.0\build\native\gmock.targets'))" />
  </Target>
</Project>